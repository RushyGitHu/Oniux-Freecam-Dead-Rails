
print("Welcome to Oniux! Game: Dead Rails")
print("Created By Mytril!")

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local runService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local camera = workspace.CurrentCamera
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Notification
StarterGui:SetCore("SendNotification", {
    Title = "Oniux By Mytril!",
    Text = "Code by Mytril!",
    Duration = 3
})

-- GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "EnhancedUI"
screenGui.Parent = game:GetService("CoreGui")

local panel = Instance.new("Frame")
panel.Size = UDim2.new(0, 320, 0, 180)
panel.Position = UDim2.new(0.5, -160, 0.7, -90)
panel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
panel.BackgroundTransparency = 0.15
panel.Parent = screenGui

-- Border Radius
local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 12)
uicorner.Parent = panel

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
titleBar.BackgroundTransparency = 0.15
titleBar.Parent = panel

local title = Instance.new("TextLabel")
title.Text = "Oniux Dead Rails"
title.Size = UDim2.new(1, -90, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 18
title.Font = Enum.Font.SourceSansBold
title.BackgroundTransparency = 1
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = titleBar

-- Credit Text
local credit = Instance.new("TextLabel")
credit.Text = "By Mytril"
credit.Size = UDim2.new(1, 0, 0, 20)
credit.Position = UDim2.new(0, 0, 1, -25)
credit.TextColor3 = Color3.fromRGB(128, 128, 128)
credit.TextSize = 14
credit.Font = Enum.Font.SourceSans
credit.BackgroundTransparency = 1
credit.Parent = panel

-- Draggable support for mobile & PC
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    panel.Position = UDim2.new(
        startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y
    )
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = panel.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)

-- Outline with color changing animation
local outline = Instance.new("UIStroke")
outline.Thickness = 3
outline.Parent = panel

local colors = {Color3.fromRGB(255, 0, 0), Color3.fromRGB(0, 255, 0), Color3.fromRGB(0, 0, 255)}
local currentColor = 1

local function changeOutlineColor()
    local tween = TweenService:Create(outline, TweenInfo.new(1, Enum.EasingStyle.Linear), {Color = colors[currentColor]})
    tween:Play()
    tween.Completed:Connect(function()
        currentColor = currentColor % #colors + 1
        changeOutlineColor()
    end)
end
changeOutlineColor()

-- Minimize and Close Buttons
local function createButton(text, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 40, 0, 30)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(128, 128, 128)  -- Gray color
    button.Text = text
    button.TextSize = 20
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Parent = titleBar

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button

    return button
end

local closeButton = createButton("X", UDim2.new(1, -45, 0, 0))
local minimizeButton = createButton("-", UDim2.new(1, -90, 0, 0))

-- Switch Toggle
local function createSwitch(labelText, position)
    local switchFrame = Instance.new("Frame")
    switchFrame.Size = UDim2.new(0, 80, 0, 30)  -- Smaller switch
    switchFrame.Position = position
    switchFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    switchFrame.Parent = panel

    local uicornerFrame = Instance.new("UICorner")
    uicornerFrame.CornerRadius = UDim.new(1, 0)
    uicornerFrame.Parent = switchFrame

    local switch = Instance.new("Frame")
    switch.Size = UDim2.new(0, 30, 0, 30)  -- Smaller switch
    switch.Position = UDim2.new(0, 0, 0, 0)
    switch.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    switch.Parent = switchFrame

    local uicornerSwitch = Instance.new("UICorner")
    uicornerSwitch.CornerRadius = UDim.new(1, 0)
    uicornerSwitch.Parent = switch

    -- Label for Switch
    local switchLabel = Instance.new("TextLabel")
    switchLabel.Text = labelText
    switchLabel.Size = UDim2.new(0, 60, 0, 20)
    switchLabel.Position = UDim2.new(0, -70, 0.5, -10)
    switchLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    switchLabel.TextSize = 14
    switchLabel.Font = Enum.Font.SourceSans
    switchLabel.BackgroundTransparency = 1
    switchLabel.Parent = switchFrame

    return switchFrame, switch
end

local npcLockSwitchFrame, npcLockSwitch = createSwitch("NPC Lock", UDim2.new(0.5, -40, 0.3, -15))
local espSwitchFrame, espSwitch = createSwitch("ESP (WIP)", UDim2.new(0.5, -40, 0.6, -15))

-- NPC Lock Functionality
local npcLock = false
local toggleLoop
local lastTarget = nil

local function animateSwitch(switch, enabled)
    if enabled then
        TweenService:Create(switch, TweenInfo.new(0.3), {Position = UDim2.new(1, -30, 0, 0), BackgroundColor3 = Color3.fromRGB(0, 255, 0)}):Play()
    else
        TweenService:Create(switch, TweenInfo.new(0.3), {Position = UDim2.new(0, 0, 0, 0), BackgroundColor3 = Color3.fromRGB(255, 0, 0)}):Play()
    end
end

-- Get closest NPC
local function getClosestNPC()
    local closestNPC = nil
    local closestDistance = math.huge

    for _, object in ipairs(workspace:GetDescendants()) do
        if object:IsA("Model") and object:FindFirstChild("Humanoid") and object:FindFirstChild("HumanoidRootPart") then
            local isPlayer = false
            for _, pl in ipairs(Players:GetPlayers()) do
                if pl.Character == object then
                    isPlayer = true
                    break
                end
            end
            if not isPlayer then
                local distance = (object.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestNPC = object
                end
            end
        end
    end
    return closestNPC
end

local function lockNPC()
    if npcLock then
        toggleLoop = runService.RenderStepped:Connect(function()
            local npc = getClosestNPC()
            if npc and npc:FindFirstChild("Humanoid") then
                camera.CameraSubject = npc.Humanoid
                lastTarget = npc
            else
                camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
            end
        end)
    else
        if toggleLoop then
            toggleLoop:Disconnect()
        end
        camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
    end
end

-- ESP Functionality
local espEnabled = false
local highlights = {}

local function addHighlight(instance, color)
    if instance and not instance:FindFirstChild("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Name = "Highlight"
        highlight.FillColor = color
        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0
        highlight.Parent = instance
        highlights[instance] = highlight
    end
end

local function removeHighlight(instance)
    if instance and instance:FindFirstChild("Highlight") then
        instance.Highlight:Destroy()
        highlights[instance] = nil
    end
end

-- List of items to highlight (e.g., guns, coals, newspapers)
local itemNames = {"Gun", "Coal", "Newspaper"}  -- Add more item names as needed

local function toggleESP()
    if espEnabled then
        for _, object in ipairs(workspace:GetDescendants()) do
            if object:IsA("Model") or object:IsA("BasePart") then
                for _, itemName in ipairs(itemNames) do
                    if object.Name:find(itemName) then
                        addHighlight(object, Color3.fromRGB(0, 255, 255))  -- Highlight items
                        break
                    end
                end
            end
        end
    else
        for instance, _ in pairs(highlights) do
            removeHighlight(instance)
        end
    end
end

-- Switch Toggles
npcLockSwitchFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        npcLock = not npcLock
        animateSwitch(npcLockSwitch, npcLock)
        lockNPC()
    end
end)

espSwitchFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        espEnabled = not espEnabled
        animateSwitch(espSwitch, espEnabled)
        toggleESP()
    end
end)

-- Minimize Button: Collapse Panel
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        TweenService:Create(panel, TweenInfo.new(0.3), {Size = UDim2.new(0, 320, 0, 30)}):Play()
        npcLockSwitchFrame.Visible = false
        espSwitchFrame.Visible = false
    else
        TweenService:Create(panel, TweenInfo.new(0.3), {Size = UDim2.new(0, 320, 0, 180)}):Play()
        npcLockSwitchFrame.Visible = true
        espSwitchFrame.Visible = true
    end
end)

closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

runService.RenderStepped:Connect(function()
    if espEnabled then
        toggleESP()
    end
end)

local player = game:GetService("Players").LocalPlayer
local runService = game:GetService("RunService")

-- Bypass zoom restrictions
runService.RenderStepped:Connect(function()
    player.CameraMode = Enum.CameraMode.Classic
    player.CameraMaxZoomDistance = 10000 -- Maximum zoom out distance
    player.CameraMinZoomDistance = 0 -- Minimum zoom in distance
end)