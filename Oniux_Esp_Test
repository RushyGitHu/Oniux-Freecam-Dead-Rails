-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

-- Constants
local ESP_DISTANCE = 30 -- Reduced distance for better performance
local UPDATE_INTERVAL = 0.1
local HIGHLIGHT_TRANSPARENCY = 0.5

-- Valid Items List
local ValidItems = {
    -- Weapons
    ["Dynamite"] = true,
    
    -- Resources & Materials
    ["Coal"] = true,
    ["Fire Torch"] = true,
    ["Barbed Wire"] = true,
    ["Corpse"] = true, -- Fuel
    ["Camera"] = true,
    ["Ammo"] = true,
    
    -- Healing Items
    ["Bandage"] = true,
    ["Dr Rico's Cure"] = true, -- Snake Oil
    
    -- Gold Items
    ["Gold Bar"] = true,
    ["Gold Statue"] = true,
    ["Gold Painting"] = true,
    ["Gold Cup"] = true,
    ["Gold Plate"] = true,
    ["Gold Watch"] = true,
    
    -- Silver Items
    ["Silver Ingot"] = true,
    ["Silver Statue"] = true,
    ["Silver Painting"] = true,
    ["Silver Cup"] = true,
    ["Silver Plate"] = true,
    ["Silver Watch"] = true,
    
    -- Other Valuables
    ["Stone Statue"] = true,
    ["Wood Painting"] = true,
    
    -- Corpses
    ["Bandit Corpse"] = true,
    ["Werewolf Corpse"] = true,
    ["Vampire Corpse"] = true,
    
    -- Common Items
    ["Barrel"] = true,
    ["Box"] = true,
    ["Chair"] = true,
    ["Pot"] = true,
    ["Tea"] = true,
    ["Rope"] = true,
    ["Wheel"] = true
}

-- Valid Enemies List
local ValidEnemies = {
    -- Zombies
    ["Zombie"] = true,
    ["Runner Zombie"] = true,
    ["Banker Zombie"] = true,
    ["Zombie Soldier"] = true,
    ["Lab Zombie"] = true,
    
    -- Outlaws
    ["Outlaw"] = true,
    ["Horseback Outlaw"] = true,
    
    -- Supernatural
    ["Vampire"] = true,
    ["Wolf"] = true,
    ["Werewolf"] = true
}

-- Valid Passive Creatures
local ValidPassive = {
    ["Horse"] = true,
    ["Unicorn"] = true
}

-- Create Mobile GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ESP_Mobile_GUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = CoreGui

-- Create Control Frame
local ControlFrame = Instance.new("Frame")
ControlFrame.Name = "ControlFrame"
ControlFrame.Size = UDim2.new(0, 180, 0, 60)
ControlFrame.Position = UDim2.new(0.5, -90, 0.9, -30)
ControlFrame.BackgroundColor3 = Color3.new(0, 0, 0)
ControlFrame.BackgroundTransparency = 0.5
ControlFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = ControlFrame

-- Create Buttons
local function CreateButton(name, position)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(0.3, 0, 0.8, 0)
    button.Position = position
    button.BackgroundColor3 = Color3.new(1, 0, 0)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Text = name
    button.TextScaled = true
    button.Parent = ControlFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button
    
    return button
end

local ESPButton = CreateButton("ESP", UDim2.new(0.05, 0, 0.1, 0))
local ItemsButton = CreateButton("Items", UDim2.new(0.35, 0, 0.1, 0))
local EnemiesButton = CreateButton("Enemies", UDim2.new(0.65, 0, 0.1, 0))

-- Variables
local ESPEnabled = false
local ShowItems = false
local ShowEnemies = false
local ESPObjects = {}

-- Make Control Frame Draggable
local isDragging = false
local dragStart = nil
local startPos = nil

ControlFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        isDragging = true
        dragStart = input.Position
        startPos = ControlFrame.Position
    end
end)

ControlFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        isDragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if isDragging and input.UserInputType == Enum.UserInputType.Touch then
        local delta = input.Position - dragStart
        ControlFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- ESP Functions
local function UpdateESP()
    if not ESPEnabled then return end
    
    -- Clean up old ESP
    for object, esp in pairs(ESPObjects) do
        if not object or not object:IsDescendantOf(game) then
            esp:Destroy()
            ESPObjects[object] = nil
        end
    end
    
    -- Update ESP for items and enemies
    for _, object in ipairs(workspace:GetDescendants()) do
        if object:IsA("Model") then
            local isItem = ValidItems[object.Name]
            local isEnemy = ValidEnemies[object.Name]
            local isPassive = ValidPassive[object.Name]
            
            if (isItem and ShowItems) or ((isEnemy or isPassive) and ShowEnemies) then
                local humanoid = object:FindFirstChild("Humanoid") or object:FindFirstChildWhichIsA("Humanoid")
                local root = object:FindFirstChild("HumanoidRootPart") or object.PrimaryPart
                
                if root then
                    local distance = (root.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                    
                    if distance <= ESP_DISTANCE then
                        if not ESPObjects[object] then
                            local esp = Instance.new("Highlight")
                            esp.FillColor = isItem and Color3.new(0, 1, 0) or (isEnemy and Color3.new(1, 0, 0) or Color3.new(0, 1, 1))
                            esp.OutlineColor = esp.FillColor
                            esp.FillTransparency = HIGHLIGHT_TRANSPARENCY
                            esp.OutlineTransparency = 0
                            esp.Parent = object
                            ESPObjects[object] = esp
                        end
                    else
                        if ESPObjects[object] then
                            ESPObjects[object]:Destroy()
                            ESPObjects[object] = nil
                        end
                    end
                end
            end
        end
    end
end

-- Button Functions
local function UpdateButtonColor(button, enabled)
    button.BackgroundColor3 = enabled and Color3.new(0, 1, 0) or Color3.new(1, 0, 0)
end

ESPButton.MouseButton1Click:Connect(function()
    ESPEnabled = not ESPEnabled
    UpdateButtonColor(ESPButton, ESPEnabled)
    
    if not ESPEnabled then
        for _, esp in pairs(ESPObjects) do
            esp:Destroy()
        end
        ESPObjects = {}
    end
end)

ItemsButton.MouseButton1Click:Connect(function()
    ShowItems = not ShowItems
    UpdateButtonColor(ItemsButton, ShowItems)
end)

EnemiesButton.MouseButton1Click:Connect(function()
    ShowEnemies = not ShowEnemies
    UpdateButtonColor(EnemiesButton, ShowEnemies)
end)

-- Main Loop
RunService.RenderStepped:Connect(function()
    if ESPEnabled and (ShowItems or ShowEnemies) then
        UpdateESP()
    end
end) 
